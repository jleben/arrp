module signal;
import array;
import math;

delay(v,a) = [0 -> v; t -> a[t-1]];

win(size,hop,x) = [t -> [size: k -> x[t*hop + k]]];

phase(freq, init) = [
    0 -> init;
    t ->
      if this[t-1] + freq[t] >= 1
      then this[t-1] + freq[t] - 1
      else this[t-1] + freq[t]
];

sine(freq, init_ph) =
  let ph = phase(freq, init_ph) in
    sin(ph * 2 * math.pi);

triangle(freq, delay) =
  let ph = phase(freq, delay) in
    1 - abs(ph*2 - 1);

biquad(a,b,x) = [n -> y[n+2]]
  where
    y = [n
      | n < 2 -> 0
      |   x[n] * b[0] + x[n-1] * b[1] + x[n-2] * b[2]
                      - y[n-1] * a[0] - y[n-2] * a[1]
    ];
